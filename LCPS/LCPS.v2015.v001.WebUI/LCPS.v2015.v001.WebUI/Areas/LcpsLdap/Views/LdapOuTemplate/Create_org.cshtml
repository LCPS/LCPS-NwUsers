@using LCPS.v2015.v001.WebUI.Areas.LcpsLdap.Models;
@using LCPS.v2015.v001.NwUsers.LcpsLdap.LdapTemplates;
@using Anvil.v2015.v001.Domain.Html;

@model OUTemplateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/LcpsLdap/Views/LdapTemplate/_LdapTemplateLayout.cshtml";
}

<style>
    .tree {
        min-height: 20px;
        padding: 19px;
        margin-bottom: 20px;
        background-color: #fbfbfb;
        border: 1px solid #999;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
        -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
    }

        .tree li {
            list-style-type: none;
            margin: 0;
            padding: 10px 5px 0 5px;
            position: relative;
        }

            .tree li::before, .tree li::after {
                content: '';
                left: -20px;
                position: absolute;
                right: auto;
            }

            .tree li::before {
                border-left: 1px solid #999;
                bottom: 50px;
                height: 100%;
                top: 0;
                width: 1px;
            }

            .tree li::after {
                border-top: 1px solid #999;
                height: 20px;
                top: 25px;
                width: 25px;
            }

            .tree li span {
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                /*border: 1px solid #999;
                border-radius: 5px; */
                display: inline-block;
                padding: 3px 8px;
                text-decoration: none;
            }

            .tree li.parent_li > span {
                cursor: pointer;
            }

            .tree li ul > li > ul > li {
                display: none;
            }


        .tree > ul > li::before, .tree > ul > li::after {
            border: 0;
        }

        .tree li:last-child::before {
            height: 30px;
        }
</style>

<script>
    $(function () {
        $('.tree li:has(ul)').addClass('parent_li').find(' > span').attr('title', 'Collapse this branch');
        $('.tree li.parent_li > span').on('click', function (e) {
            var children = $(this).parent('li.parent_li').find(' > ul > li');
            if (children.is(":visible")) {
                children.hide('fast');
                $(this).attr('title', 'Expand this branch').find(' > i').addClass('fa-folder-o').removeClass('fa-folder-open-o');
            } else {
                children.show('fast');
                $(this).attr('title', 'Collapse this branch').find(' > i').addClass('fa-folder-open-o').removeClass('fa-folder-o');
            }
            e.stopPropagation();
        });
    });
</script>

<h2>Create OU Template</h2>


@helper TreeNode(AnvilTreeNode nn)
{
    foreach (AnvilTreeNode n in nn.Children)
    {
        if (n.Children.Count() == 0)
        {
            <li>
                <span><i class="fa fa-list-alt"></i> </span> <a href="@Url.Action("SelectOu", "LdapOuTemplate", new { area = "LcpsLdap", id = new Guid(n.Value) })">@n.Text</a>
            </li>
        }
        else
        {
            <li>
                <span><i class="fa fa-folder-o"></i> </span> <a href="@Url.Action("SelectOu", "LdapOuTemplate", new { area = "LcpsLdap", id = new Guid(n.Value) })">@n.Text</a>
                <ul>
                    @TreeNode(n)
                </ul>
            </li>
        }
    }
}

<div class="row">
    <div class="col-md-5">
        <h3>Organizational Unit Tree</h3>
        <div class="tree well">
            <ul>
                <li>
                    <span><i class="icon-folder-open fa fa-globe"></i> @Model.OuTree.RootNode.Text</span>
                    <ul>
                        @TreeNode(Model.OuTree.RootNode)
                    </ul>
                </li>
            </ul>
        </div>
    </div>
    <div class="col-md-7">
        <h3>OU Template Details</h3>
        <div class="well">
            @using (Html.BeginForm("Create", "LdapOuTemplate", new { area = "LcpsLdap" }, FormMethod.Post))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.OUTemplate.OUId)

                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OUTemplate.TemplateName, new { @class = "control-label col-md-3" })
                        @Html.TextBoxFor(model => model.OUTemplate.TemplateName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OUTemplate.TemplateName, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OUTemplate.Description, new { @class = "control-label col-md-3" })
                        @Html.TextBoxFor(model => model.OUTemplate.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OUTemplate.Description, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OUTemplate.FilterClass, new { @class = "control-label col-md-3" })
                        @Html.EnumDropDownListFor(model => model.OUTemplate.FilterClass, new { @class = "form-control" })
                    </div>
                    @if (Model.OUTemplate != null && !Model.OUTemplate.OUId.Equals(Guid.Empty))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.OUTemplate.OUName, new { @class = "control-label col-md-3" })
                            @Html.DisplayFor(model => model.OUTemplate.OUName, new { @class = "control-label" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OUTemplate.OUDescription, new { @class = "control-label col-md-3" })
                            @Html.DisplayFor(model => model.OUTemplate.OUDescription, new { @class = "control-label" })
                        </div>
                    }
                    <div class="form-group">
                        <input type="submit" value="Submit" class="btn btn-success col-md-offset-1"  />
                    </div>
                </div>
            }
        </div>

    </div>
</div>


