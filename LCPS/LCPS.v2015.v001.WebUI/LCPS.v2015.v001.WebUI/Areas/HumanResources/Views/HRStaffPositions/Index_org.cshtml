@using PagedList;
@using PagedList.Mvc;
@using LCPS.v2015.v001.NwUsers.HumanResources;
@using LCPS.v2015.v001.NwUsers.HumanResources.Staff;

@model PagedList<LCPS.v2015.v001.NwUsers.HumanResources.Staff.HRStaffPosition>

@{
    ViewBag.Title = "Index";
    ViewBag.Page = Request.QueryString["page"];
    Layout = "~/Areas/HumanResources/Views/Shared/_HumanResourcesLayout.cshtml";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.0/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.0/js/bootstrap-toggle.min.js"></script>

<h2>Staff Positions <span class="badge">@Model.Count()</span></h2>

<div class="navbar">
    <div class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
            <li>
                <a href="@Url.Action("Create", "HRStaffPositions", new { area = "HumanResources" })"><i class="fa fa-plus"></i> Create New</a>
            </li>
            <li>
                <a href="@Url.Action("ImportFile", "HRStaffPositions", new { area = "HumanResources" } )"><i class="fa fa-upload"></i>  Import</a>
            </li>
        </ul>
    </div>
</div>

<script>
    $(function () {
        $('.cb').bootstrapToggle({
            on: 'Filter On',
            off: 'Filter Off',
            onstyle: 'success',
            offstyle: 'warning',
            size: 'mini'
        });
    })

    $(document).ready(function ()
    {
        var bdFilter = getParameterByName('bdFilter');

        $('#bdFilter').bootstrapToggle(bdFilter);

        toggleDdl('building-ddl', 'bdFilter');



        var etFilter = getParameterByName('etFilter');

        $('#etFilter').bootstrapToggle(etFilter);

        toggleDdl('et-ddl', 'etFilter');


        var jtFilter = getParameterByName('jtFilter');

        $('#jtFilter').bootstrapToggle(jtFilter);

        toggleDdl('jt-ddl', 'jtFilter');


        var stFilter = getParameterByName('stFilter');

        $('#stFilter').bootstrapToggle(stFilter);

        toggleDdl('st-ddl', 'stFilter');


        var nFilter = getParameterByName('nFilter');

        $('#nFilter').bootstrapToggle(nFilter);

        toggleDdl('n-tb', 'nFilter');


    });
    

    function toggleDdl(ddlId, cbId) {

        ddl = document.getElementById(ddlId)

        cb = document.getElementById(cbId);

        ddl.disabled = (cb.checked != true);
    }

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    
</script>


<div class="container">
    @using (Html.BeginForm("Index", "HRStaffPositions", new { area = "HumanResources" }, FormMethod.Get))
    {
        <div class="row" style="margin-bottom: 8px">
            <div class="col-md-2">
                <p><strong>Building</strong> <input id="bdFilter" name="bdFilter" class="cb" type="checkbox" onchange="toggleDdl('building-ddl', 'bdFilter')"></p>
                @Html.DropDownList("bdId", HRBuilding.GetBuildingList(), new { @class = "form-control input-sm", id = "building-ddl" })
            </div>
            <div class="col-md-2">
                <p><strong>Type</strong> <input id="etFilter" name="etFilter" class="cb" type="checkbox" onchange="toggleDdl('et-ddl', 'etFilter')"></p>
                @Html.DropDownList("etId", HREmployeeType.GetEmployeeTypeList(), new { @class = "form-control input-sm", id = "et-ddl" })
            </div>
            <div class="col-md-2">
                <p><strong>Title</strong> <input id="jtFilter" name="jtFilter" class="cb" type="checkbox" onchange="toggleDdl('jt-ddl', 'jtFilter')"></p>
                @Html.DropDownList("jtId", HRJobTitle.GetJobTitleList(), new { @class = "form-control input-sm", id = "jt-ddl" })
            </div>
            <div class="col-md-2">
                <p><strong>Status</strong> <input id="stFilter" name="stFilter" class="cb" type="checkbox" onchange="toggleDdl('st-ddl', 'stFilter')"></p>
                @Html.DropDownList("st", HRStaffPosition.StaffQualifierList(), new { @class = "form-control input-sm", id = "st-ddl" })
            </div>
            <div class="col-md-2">
                <p><strong>Name</strong> <input id="nFilter" name="nFilter" class="cb" type="checkbox" onchange="toggleDdl('n-tb', 'nFilter')"></p>
                @Html.TextBox("n", Request.QueryString["n"], new { @class = "form-control input-sm", @id = "n-tb"  })
            </div>
            <div class="col-md-2">
                &nbsp;<br />
                <input type="submit" value="Search" class="btn btn-sm btn-success" />
            </div>

        </div>
        
    }
</div>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page }))

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().StaffMember.SortName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Building.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().EmployeeType.EmployeeTypeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().JobTitle.JobTitleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FiscalYear)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StaffMember.SortName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Building.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeType.EmployeeTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobTitle.JobTitleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FiscalYear)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PositionKey }) |
                @Html.ActionLink("Details", "Details", new { id = item.PositionKey }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PositionKey })
            </td>
        </tr>
    }

</table>
